{"data":{"__schema":{"types":[{"possibleTypes":null,"name":"__Directive","kind":"OBJECT","interfaces":[],"inputFields":null,"fields":[{"type":{"ofType":{"ofType":null,"name":"__InputValue","kind":"OBJECT"},"name":null,"kind":"LIST"},"name":"args","isDeprecated":false,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":null,"name":"String","kind":"SCALAR"},"name":"description","isDeprecated":false,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":{"ofType":null,"name":"__DirectiveLocation","kind":"ENUM"},"name":null,"kind":"LIST"},"name":"locations","isDeprecated":false,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":null,"name":"String","kind":"SCALAR"},"name":"name","isDeprecated":false,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":null,"name":"Boolean","kind":"SCALAR"},"name":"onField","isDeprecated":true,"description":null,"deprecationReason":"Check `locations` field for enum value FIELD","args":[]},{"type":{"ofType":null,"name":"Boolean","kind":"SCALAR"},"name":"onFragment","isDeprecated":true,"description":null,"deprecationReason":"Check `locations` field for enum value FRAGMENT_SPREAD","args":[]},{"type":{"ofType":null,"name":"Boolean","kind":"SCALAR"},"name":"onOperation","isDeprecated":true,"description":null,"deprecationReason":"Check `locations` field for enum value OPERATION","args":[]}],"enumValues":null,"description":"Represents a directive"},{"possibleTypes":null,"name":"__DirectiveLocation","kind":"ENUM","interfaces":null,"inputFields":null,"fields":null,"enumValues":[{"name":"FIELD","isDeprecated":false,"description":null,"deprecationReason":null},{"name":"FRAGMENT_DEFINITION","isDeprecated":false,"description":null,"deprecationReason":null},{"name":"FRAGMENT_SPREAD","isDeprecated":false,"description":null,"deprecationReason":null},{"name":"INLINE_FRAGMENT","isDeprecated":false,"description":null,"deprecationReason":null},{"name":"MUTATION","isDeprecated":false,"description":null,"deprecationReason":null},{"name":"QUERY","isDeprecated":false,"description":null,"deprecationReason":null},{"name":"SUBSCRIPTION","isDeprecated":false,"description":null,"deprecationReason":null}],"description":null},{"possibleTypes":null,"name":"__EnumValue","kind":"OBJECT","interfaces":[],"inputFields":null,"fields":[{"type":{"ofType":null,"name":"String","kind":"SCALAR"},"name":"deprecationReason","isDeprecated":false,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":null,"name":"String","kind":"SCALAR"},"name":"description","isDeprecated":false,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":null,"name":"Boolean","kind":"SCALAR"},"name":"isDeprecated","isDeprecated":false,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":null,"name":"String","kind":"SCALAR"},"name":"name","isDeprecated":false,"description":null,"deprecationReason":null,"args":[]}],"enumValues":null,"description":null},{"possibleTypes":null,"name":"__Field","kind":"OBJECT","interfaces":[],"inputFields":null,"fields":[{"type":{"ofType":{"ofType":null,"name":"__InputValue","kind":"OBJECT"},"name":null,"kind":"LIST"},"name":"args","isDeprecated":false,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":null,"name":"String","kind":"SCALAR"},"name":"deprecationReason","isDeprecated":false,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":null,"name":"String","kind":"SCALAR"},"name":"description","isDeprecated":false,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":null,"name":"Boolean","kind":"SCALAR"},"name":"isDeprecated","isDeprecated":false,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":null,"name":"String","kind":"SCALAR"},"name":"name","isDeprecated":false,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":null,"name":"__Type","kind":"OBJECT"},"name":"type","isDeprecated":false,"description":null,"deprecationReason":null,"args":[]}],"enumValues":null,"description":null},{"possibleTypes":null,"name":"__InputValue","kind":"OBJECT","interfaces":[],"inputFields":null,"fields":[{"type":{"ofType":null,"name":"String","kind":"SCALAR"},"name":"defaultValue","isDeprecated":false,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":null,"name":"String","kind":"SCALAR"},"name":"description","isDeprecated":false,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":null,"name":"String","kind":"SCALAR"},"name":"name","isDeprecated":false,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":null,"name":"__Type","kind":"OBJECT"},"name":"type","isDeprecated":false,"description":null,"deprecationReason":null,"args":[]}],"enumValues":null,"description":null},{"possibleTypes":null,"name":"__Schema","kind":"OBJECT","interfaces":[],"inputFields":null,"fields":[{"type":{"ofType":{"ofType":null,"name":"__Directive","kind":"OBJECT"},"name":null,"kind":"LIST"},"name":"directives","isDeprecated":false,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":null,"name":"__Type","kind":"OBJECT"},"name":"mutationType","isDeprecated":false,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":null,"name":"__Type","kind":"OBJECT"},"name":"queryType","isDeprecated":false,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":null,"name":"__Type","kind":"OBJECT"},"name":"subscriptionType","isDeprecated":false,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":{"ofType":null,"name":"__Type","kind":"OBJECT"},"name":null,"kind":"LIST"},"name":"types","isDeprecated":false,"description":null,"deprecationReason":null,"args":[]}],"enumValues":null,"description":"Represents a schema"},{"possibleTypes":null,"name":"__Type","kind":"OBJECT","interfaces":[],"inputFields":null,"fields":[{"type":{"ofType":null,"name":"String","kind":"SCALAR"},"name":"description","isDeprecated":false,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":{"ofType":null,"name":"__EnumValue","kind":"OBJECT"},"name":null,"kind":"LIST"},"name":"enumValues","isDeprecated":false,"description":null,"deprecationReason":null,"args":[{"type":{"ofType":null,"name":"Boolean","kind":"SCALAR"},"name":"includeDeprecated","description":null,"defaultValue":"false"}]},{"type":{"ofType":{"ofType":null,"name":"__Field","kind":"OBJECT"},"name":null,"kind":"LIST"},"name":"fields","isDeprecated":false,"description":null,"deprecationReason":null,"args":[{"type":{"ofType":null,"name":"Boolean","kind":"SCALAR"},"name":"includeDeprecated","description":null,"defaultValue":"false"}]},{"type":{"ofType":{"ofType":null,"name":"__InputValue","kind":"OBJECT"},"name":null,"kind":"LIST"},"name":"inputFields","isDeprecated":false,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":{"ofType":null,"name":"__Type","kind":"OBJECT"},"name":null,"kind":"LIST"},"name":"interfaces","isDeprecated":false,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":null,"name":"String","kind":"SCALAR"},"name":"kind","isDeprecated":false,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":null,"name":"String","kind":"SCALAR"},"name":"name","isDeprecated":false,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":null,"name":"__Type","kind":"OBJECT"},"name":"ofType","isDeprecated":false,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":{"ofType":null,"name":"__Type","kind":"OBJECT"},"name":null,"kind":"LIST"},"name":"possibleTypes","isDeprecated":false,"description":null,"deprecationReason":null,"args":[]}],"enumValues":null,"description":"Represents scalars, interfaces, object types, unions, enums in the system"},{"possibleTypes":null,"name":"Boolean","kind":"SCALAR","interfaces":null,"inputFields":null,"fields":null,"enumValues":null,"description":"The `Boolean` scalar type represents `true` or `false`."},{"possibleTypes":null,"name":"Faction","kind":"OBJECT","interfaces":[{"ofType":null,"name":"Node","kind":"INTERFACE"}],"inputFields":null,"fields":[{"type":{"ofType":null,"name":"ID","kind":"SCALAR"},"name":"factionId","isDeprecated":false,"description":"id of faction in db","deprecationReason":null,"args":[]},{"type":{"ofType":{"ofType":null,"name":"ID","kind":"SCALAR"},"name":null,"kind":"NON_NULL"},"name":"id","isDeprecated":false,"description":"The ID of an object","deprecationReason":null,"args":[]},{"type":{"ofType":null,"name":"String","kind":"SCALAR"},"name":"name","isDeprecated":false,"description":"The name of the faction","deprecationReason":null,"args":[]},{"type":{"ofType":null,"name":"ShipConnection","kind":"OBJECT"},"name":"ships","isDeprecated":false,"description":"The ships used by the faction.","deprecationReason":null,"args":[{"type":{"ofType":null,"name":"String","kind":"SCALAR"},"name":"after","description":null,"defaultValue":null},{"type":{"ofType":null,"name":"String","kind":"SCALAR"},"name":"before","description":null,"defaultValue":null},{"type":{"ofType":null,"name":"Int","kind":"SCALAR"},"name":"first","description":null,"defaultValue":null},{"type":{"ofType":null,"name":"Int","kind":"SCALAR"},"name":"last","description":null,"defaultValue":null}]}],"enumValues":null,"description":"A faction in the Star Wars saga\n\nThis implements the following type system shorthand:\n  type Faction : Node {\n    id: String!\n    name: String\n    ships: ShipConnection\n  }\n"},{"possibleTypes":null,"name":"Float","kind":"SCALAR","interfaces":null,"inputFields":null,"fields":null,"enumValues":null,"description":"The `Float` scalar type represents signed double-precision fractional\nvalues as specified by\n[IEEE 754](http://en.wikipedia.org/wiki/IEEE_floating_point)."},{"possibleTypes":null,"name":"ID","kind":"SCALAR","interfaces":null,"inputFields":null,"fields":null,"enumValues":null,"description":"The `ID` scalar type represents a unique identifier, often used to\nrefetch an object or as key for a cache. The ID type appears in a JSON\nresponse as a String; however, it is not intended to be human-readable.\nWhen expected as an input type, any string (such as `\"4\"`) or integer\n(such as `4`) input value will be accepted as an ID."},{"possibleTypes":null,"name":"Int","kind":"SCALAR","interfaces":null,"inputFields":null,"fields":null,"enumValues":null,"description":"The `Int` scalar type represents non-fractional signed whole numeric values.\nInt can represent values between `-(2^53 - 1)` and `2^53 - 1` since it is\nrepresented in JSON as double-precision floating point numbers specified\nby [IEEE 754](http://en.wikipedia.org/wiki/IEEE_floating_point)."},{"possibleTypes":null,"name":"IntroduceShipInput","kind":"INPUT_OBJECT","interfaces":null,"inputFields":[{"type":{"ofType":{"ofType":null,"name":"String","kind":"SCALAR"},"name":null,"kind":"NON_NULL"},"name":"clientMutationId","description":null,"defaultValue":null},{"type":{"ofType":{"ofType":null,"name":"ID","kind":"SCALAR"},"name":null,"kind":"NON_NULL"},"name":"factionId","description":null,"defaultValue":null},{"type":{"ofType":{"ofType":null,"name":"String","kind":"SCALAR"},"name":null,"kind":"NON_NULL"},"name":"shipName","description":null,"defaultValue":null}],"fields":null,"enumValues":null,"description":null},{"possibleTypes":null,"name":"IntroduceShipPayload","kind":"OBJECT","interfaces":[],"inputFields":null,"fields":[{"type":{"ofType":{"ofType":null,"name":"String","kind":"SCALAR"},"name":null,"kind":"NON_NULL"},"name":"clientMutationId","isDeprecated":false,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":null,"name":"Faction","kind":"OBJECT"},"name":"faction","isDeprecated":false,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":null,"name":"ShipEdge","kind":"OBJECT"},"name":"newShipEdge","isDeprecated":false,"description":null,"deprecationReason":null,"args":[]}],"enumValues":null,"description":null},{"possibleTypes":null,"name":"RootMutationType","kind":"OBJECT","interfaces":[],"inputFields":null,"fields":[{"type":{"ofType":null,"name":"IntroduceShipPayload","kind":"OBJECT"},"name":"introduceShip","isDeprecated":false,"description":"Creates the IntroduceShip mutation.\n\nIn the mutator configuration in getConfigs() in AddShipMutation.js, edgeName;\nwhich is required for RANGE_ADD mutation types, is set to newShipEdge, that's why\nnew_ship_edge is in the output block.","deprecationReason":null,"args":[{"type":{"ofType":{"ofType":null,"name":"IntroduceShipInput","kind":"INPUT_OBJECT"},"name":null,"kind":"NON_NULL"},"name":"input","description":null,"defaultValue":null}]}],"enumValues":null,"description":null},{"possibleTypes":[],"name":"Node","kind":"INTERFACE","interfaces":null,"inputFields":null,"fields":[{"type":{"ofType":{"ofType":null,"name":"ID","kind":"SCALAR"},"name":null,"kind":"NON_NULL"},"name":"id","isDeprecated":false,"description":"The id of the object.","deprecationReason":null,"args":[]}],"enumValues":null,"description":"Node interface provided by Absinthe.Relay.\n"},{"possibleTypes":null,"name":"PageInfo","kind":"OBJECT","interfaces":[],"inputFields":null,"fields":[{"type":{"ofType":null,"name":"String","kind":"SCALAR"},"name":"endCursor","isDeprecated":false,"description":"When paginating forwards, the cursor to continue.","deprecationReason":null,"args":[]},{"type":{"ofType":{"ofType":null,"name":"Boolean","kind":"SCALAR"},"name":null,"kind":"NON_NULL"},"name":"hasNextPage","isDeprecated":false,"description":"When paginating forwards, are there more items?","deprecationReason":null,"args":[]},{"type":{"ofType":{"ofType":null,"name":"Boolean","kind":"SCALAR"},"name":null,"kind":"NON_NULL"},"name":"hasPreviousPage","isDeprecated":false,"description":"When paginating backwards, are there more items?","deprecationReason":null,"args":[]},{"type":{"ofType":null,"name":"String","kind":"SCALAR"},"name":"startCursor","isDeprecated":false,"description":"When paginating backwards, the cursor to continue.","deprecationReason":null,"args":[]}],"enumValues":null,"description":null},{"possibleTypes":null,"name":"RootQueryType","kind":"OBJECT","interfaces":[],"inputFields":null,"fields":[{"type":{"ofType":{"ofType":null,"name":"Faction","kind":"OBJECT"},"name":null,"kind":"LIST"},"name":"factions","isDeprecated":false,"description":"StarWars field to be used in the RootQueryType.","deprecationReason":null,"args":[{"type":{"ofType":{"ofType":null,"name":"String","kind":"SCALAR"},"name":null,"kind":"LIST"},"name":"names","description":null,"defaultValue":null}]},{"type":{"ofType":null,"name":"Node","kind":"INTERFACE"},"name":"node","isDeprecated":false,"description":"This is the field used by Relay to identify an object in the Graph","deprecationReason":null,"args":[{"type":{"ofType":{"ofType":null,"name":"ID","kind":"SCALAR"},"name":null,"kind":"NON_NULL"},"name":"id","description":"The id of an object.","defaultValue":null}]}],"enumValues":null,"description":null},{"possibleTypes":null,"name":"Ship","kind":"OBJECT","interfaces":[{"ofType":null,"name":"Node","kind":"INTERFACE"}],"inputFields":null,"fields":[{"type":{"ofType":{"ofType":null,"name":"ID","kind":"SCALAR"},"name":null,"kind":"NON_NULL"},"name":"id","isDeprecated":false,"description":"The ID of an object","deprecationReason":null,"args":[]},{"type":{"ofType":{"ofType":null,"name":"String","kind":"SCALAR"},"name":null,"kind":"NON_NULL"},"name":"name","isDeprecated":false,"description":"The name of the ship","deprecationReason":null,"args":[]}],"enumValues":null,"description":"A ship in the Star Wars saga\n\nThis implements the following type system shorthand:\n  type Ship : Node {\n    id: String!\n    name: String\n  }\n"},{"possibleTypes":null,"name":"ShipConnection","kind":"OBJECT","interfaces":[],"inputFields":null,"fields":[{"type":{"ofType":{"ofType":null,"name":"ShipEdge","kind":"OBJECT"},"name":null,"kind":"LIST"},"name":"edges","isDeprecated":false,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":{"ofType":null,"name":"PageInfo","kind":"OBJECT"},"name":null,"kind":"NON_NULL"},"name":"pageInfo","isDeprecated":false,"description":null,"deprecationReason":null,"args":[]}],"enumValues":null,"description":null},{"possibleTypes":null,"name":"ShipEdge","kind":"OBJECT","interfaces":[],"inputFields":null,"fields":[{"type":{"ofType":{"ofType":null,"name":"String","kind":"SCALAR"},"name":null,"kind":"NON_NULL"},"name":"cursor","isDeprecated":false,"description":"A cursor for use in pagination","deprecationReason":null,"args":[]},{"type":{"ofType":null,"name":"Ship","kind":"OBJECT"},"name":"node","isDeprecated":false,"description":"The item at the end of the edge","deprecationReason":null,"args":[]}],"enumValues":null,"description":null},{"possibleTypes":null,"name":"StarWarsMutations","kind":"OBJECT","interfaces":[],"inputFields":null,"fields":[{"type":{"ofType":null,"name":"IntroduceShipPayload","kind":"OBJECT"},"name":"introduceShip","isDeprecated":false,"description":"Creates the IntroduceShip mutation.\n\nIn the mutator configuration in getConfigs() in AddShipMutation.js, edgeName;\nwhich is required for RANGE_ADD mutation types, is set to newShipEdge, that's why\nnew_ship_edge is in the output block.","deprecationReason":null,"args":[{"type":{"ofType":{"ofType":null,"name":"IntroduceShipInput","kind":"INPUT_OBJECT"},"name":null,"kind":"NON_NULL"},"name":"input","description":null,"defaultValue":null}]}],"enumValues":null,"description":null},{"possibleTypes":null,"name":"StarWarsRootField","kind":"OBJECT","interfaces":[],"inputFields":null,"fields":[{"type":{"ofType":{"ofType":null,"name":"Faction","kind":"OBJECT"},"name":null,"kind":"LIST"},"name":"factions","isDeprecated":false,"description":"StarWars field to be used in the RootQueryType.","deprecationReason":null,"args":[{"type":{"ofType":{"ofType":null,"name":"String","kind":"SCALAR"},"name":null,"kind":"LIST"},"name":"names","description":null,"defaultValue":null}]}],"enumValues":null,"description":null},{"possibleTypes":null,"name":"String","kind":"SCALAR","interfaces":null,"inputFields":null,"fields":null,"enumValues":null,"description":"The `String` scalar type represents textual data, represented as UTF-8\ncharacter sequences. The String type is most often used by GraphQL to\nrepresent free-form human-readable text."}],"subscriptionType":null,"queryType":{"name":"RootQueryType"},"mutationType":{"name":"RootMutationType"},"directives":[{"name":"include","locations":["INLINE_FRAGMENT","FRAGMENT_SPREAD","FIELD"],"description":"Directs the executor to include this field or fragment only when the `if` argument is true.\"","args":[{"type":{"ofType":{"ofType":null,"name":"Boolean","kind":"SCALAR"},"name":null,"kind":"NON_NULL"},"name":"if","description":"Included when true.","defaultValue":null}]},{"name":"skip","locations":["INLINE_FRAGMENT","FRAGMENT_SPREAD","FIELD"],"description":"Directs the executor to skip this field or fragment when the `if` argument is true.","args":[{"type":{"ofType":{"ofType":null,"name":"Boolean","kind":"SCALAR"},"name":null,"kind":"NON_NULL"},"name":"if","description":"Skipped when true.","defaultValue":null}]}]}}}